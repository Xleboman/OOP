import { TetrominoType } from "../types/tetromino/TetrominoType";
import { TetrominoMatrix } from "../types/tetromino/TetrominoMatrix";

// Цвета тетрамино по типам.
export const TETROMINO_COLORS = {
  I: '#00bbb4',     O: '#e8d800',       T: '#ed86b3',
  S: '#9ad600',     Z: '#f91210',       J: '#3a3f9d',
  L: '#ffa401'
} as const;

// Таблица отскоков для тетрамино J, L, S, T, Z идентична, имеет смысл привести её единожды.
const STANDARD_WALL_KICKS = [
  // 0>>1 (по часовой)
  [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]],
  // 1>>2
  [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]],
  // 2>>3
  [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],
  // 3>>0
  [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]],
  // 0>>3 (против часовой)
  [[0, 0], [1, 0], [1, 1], [0, -2], [1, -2]],
  // 3>>2
  [[0, 0], [-1, 0], [-1, -1], [0, 2], [-1, 2]],
  // 2>>1
  [[0, 0], [-1, 0], [-1, 1], [0, -2], [-1, -2]],
  // 1>>0
  [[0, 0], [1, 0], [1, -1], [0, 2], [1, 2]]
];

// Таблица отскоков для тетрамино I (линия) отличается от остальных. 
const I_WALL_KICKS = [
  // 0>>1 (по часовой)
  [[0, 0], [-2, 0], [1, 0], [-2, -1], [1, 2]],
  // 1>>2
  [[0, 0], [-1, 0], [2, 0], [-1, 2], [2, -1]],
  // 2>>3
  [[0, 0], [2, 0], [-1, 0], [2, 1], [-1, -2]],
  // 3>>0
  [[0, 0], [1, 0], [-2, 0], [1, -2], [-2, 1]],
  // 0>>3 (против часовой)
  [[0, 0], [-1, 0], [2, 0], [-1, 2], [2, -1]],
  // 3>>2
  [[0, 0], [-2, 0], [1, 0], [-2, -1], [1, 2]],
  // 2>>1
  [[0, 0], [1, 0], [-2, 0], [1, -2], [-2, 1]],
  // 1>>0
  [[0, 0], [2, 0], [-1, 0], [2, 1], [-1, -2]]
];

// Фигура O (квадрат) инвариантна относительно поворота, так что таблица отскоков у неё нулевая. 
const O_WALL_KICKS = Array(8).fill([[0, 0]]);

// Сводный массив таблиц отскоков от стен для поворотов фигур при близости к стенам.
export const TETROMINO_WALL_KICKS: Record<TetrominoType, number[][][]> = {
  I: I_WALL_KICKS,
  O: O_WALL_KICKS,
  T: STANDARD_WALL_KICKS,
  J: STANDARD_WALL_KICKS,
  L: STANDARD_WALL_KICKS,
  S: STANDARD_WALL_KICKS,
  Z: STANDARD_WALL_KICKS
};

const TETROMINO_I_ROTATIONS = [
  // 0°
  [
    [0, 0, 0, 0],
    [1, 1, 1, 1],
    [0, 0, 0, 0],
    [0, 0, 0, 0]
  ],
  // 90°
  [
    [0, 0, 1, 0],
    [0, 0, 1, 0],
    [0, 0, 1, 0],
    [0, 0, 1, 0]
  ],
  // 180°
  [
    [0, 0, 0, 0],
    [0, 0, 0, 0],
    [1, 1, 1, 1],
    [0, 0, 0, 0]
  ],
  // 270°
  [
    [0, 1, 0, 0],
    [0, 1, 0, 0],
    [0, 1, 0, 0],
    [0, 1, 0, 0]
  ]
];

const TETROMINO_O_ROTATIONS = [
  // 0°
  [
    [1, 1],
    [1, 1]
  ],
  // 90°
  [
    [1, 1],
    [1, 1]
  ],
  // 180°
  [
    [1, 1],
    [1, 1]
  ],
  // 270°
  [
    [1, 1],
    [1, 1]
  ],
];

const TETROMINO_T_ROTATIONS = [
  // 0°
  [
    [0, 1, 0],
    [1, 1, 1],
    [0, 0, 0]
  ],
  // 90°
  [
    [0, 1, 0],
    [0, 1, 1],
    [0, 1, 0]
  ],
  // 180°
  [
    [0, 0, 0],
    [1, 1, 1],
    [0, 1, 0]
  ],
  // 270°
  [
    [0, 1, 0],
    [1, 1, 0],
    [0, 1, 0]
  ],
];

const TETROMINO_J_ROTATIONS = [
  // 0°
  [
    [1, 0, 0],
    [1, 1, 1],
    [0, 0, 0]
  ],
  // 90°
  [
    [0, 1, 1],
    [0, 1, 0],
    [0, 1, 0]
  ],
  // 180°
  [
    [0, 0, 0],
    [1, 1, 1],
    [0, 0, 1]
  ],
  // 270°
  [
    [0, 1, 0],
    [0, 1, 0],
    [1, 1, 0]
  ],
];

const TETROMINO_L_ROTATIONS = [
  // 0°
  [
    [0, 0, 1],
    [1, 1, 1],
    [0, 0, 0]
  ],
  // 90°
  [
    [0, 1, 0],
    [0, 1, 0],
    [0, 1, 1]
  ],
  // 180°
  [
    [0, 0, 0],
    [1, 1, 1],
    [1, 0, 0]
  ],
  // 270°
  [
    [1, 1, 0],
    [0, 1, 0],
    [0, 1, 0]
  ],
];

const TETROMINO_S_ROTATIONS = [
  // 0°
  [
    [0, 1, 1],
    [1, 1, 0],
    [0, 0, 0]
  ],
  // 90°
  [
    [0, 1, 0],
    [0, 1, 1],
    [0, 0, 1]
  ],
  // 180°
  [
    [0, 0, 0],
    [0, 1, 1],
    [1, 1, 0]
  ],
  // 270°
  [
    [1, 0, 0],
    [1, 1, 0],
    [0, 1, 0]
  ],
];

const TETROMINO_Z_ROTATIONS = [
  // 0°
  [
    [1, 1, 0],
    [0, 1, 1],
    [0, 0, 0]
  ],
  // 90°
  [
    [0, 0, 1],
    [0, 1, 1],
    [0, 1, 0]
  ],
  // 180°
  [
    [0, 0, 0],
    [1, 1, 0],
    [0, 1, 1]
  ],
  // 270°
  [
    [0, 1, 0],
    [1, 1, 0],
    [1, 0, 0]
  ],
];

// Матрицы всех типов тетрамино со всеми возможными их конфигурациями.
export const TETROMINO_TILES: Record<TetrominoType, TetrominoMatrix[]> = {
  I: TETROMINO_I_ROTATIONS,
  O: TETROMINO_O_ROTATIONS,
  T: TETROMINO_T_ROTATIONS,
  J: TETROMINO_J_ROTATIONS,
  L: TETROMINO_L_ROTATIONS,
  S: TETROMINO_S_ROTATIONS,
  Z: TETROMINO_Z_ROTATIONS
};